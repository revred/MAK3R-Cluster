version: '3.8'

services:
  mak3r-edge:
    build:
      context: .
      dockerfile: MAK3R.Edge/Dockerfile
    container_name: mak3r-edge
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - EdgeConfig__SiteId=${SITE_ID:-BLR-Plant-01}
      - EdgeConfig__Timezone=${TIMEZONE:-Asia/Kolkata}
      - EdgeConfig__Uplink__HubUrl=${HUB_URL:-https://cluster.mak3r.ai/hubs/machines}
      - EdgeConfig__AdminApi__Listen=${ADMIN_LISTEN:-http://0.0.0.0:9080}
      - EdgeConfig__Storage__Root=${STORAGE_ROOT:-/app/data}
    volumes:
      - edge_data:/app/data
      - edge_logs:/app/logs
      - ./config/edge-config.json:/app/config/edge-config.json:ro
      - ./config/machines.json:/app/config/machines.json:ro
    ports:
      - "${ADMIN_PORT:-9080}:9080"
    networks:
      - mak3r_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  edge-monitor:
    image: prom/prometheus:latest
    container_name: edge-monitor
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "${MONITOR_PORT:-9090}:9090"
    networks:
      - mak3r_network

  edge-grafana:
    image: grafana/grafana:latest
    container_name: edge-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    networks:
      - mak3r_network

volumes:
  edge_data:
  edge_logs:
  prometheus_data:
  grafana_data:

networks:
  mak3r_network:
    driver: bridge